/**
 * Copyright 2025 the original author or authors from the Jeddict project (https://jeddict.github.io/).
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
package io.github.jeddict.ai.components;

import io.github.jeddict.ai.util.ColorUtil;
import static io.github.jeddict.ai.util.EditorUtil.getBackgroundColorFromMimeType;
import static io.github.jeddict.ai.util.MimeUtil.MIME_PLAIN_TEXT;
import java.awt.Color;
import java.util.Set;
import javax.swing.table.DefaultTableModel;
import org.openide.filesystems.FileObject;

/**
 *
 * @author Shiwani Gupta
 */
public final class ContextDialog extends javax.swing.JDialog {

    private final String projectRootDir;
    private final Set<FileObject> fileObjects;

    /**
     * Creates new form ContextDialog
     */
    public ContextDialog(java.awt.Frame parent,
            boolean enableRules, String rules,
            String projectRootDir, Set<FileObject> fileObjects) {
        super(parent, true);
        this.projectRootDir = projectRootDir;
        this.fileObjects = fileObjects;
        initComponents();
        setRules(enableRules, rules);

        Color bgColor = getBackgroundColorFromMimeType(MIME_PLAIN_TEXT);
        boolean isDark = ColorUtil.isDarkColor(bgColor);
        if (isDark) {
            applyDarkTheme();
        }
    }

    private DefaultTableModel tableModel;

    private DefaultTableModel getTableModel() {
        Object[][] data = new Object[fileObjects.size()][2];

        int i = 0;
        for (FileObject contextFile : fileObjects) {
            String relativePath = contextFile.getPath();
            if (projectRootDir != null) {
                relativePath = relativePath.replaceFirst(projectRootDir + "/", "");
            }
            data[i][0] = contextFile.getName();
            data[i][1] = relativePath;
            i++;
        }
        tableModel = new DefaultTableModel(
                data,
                new String[]{
                    "Session Context Files", "Path"
                }
        ) {
        };
        return tableModel;
    }

    public String getRules() {
        return rulesTextArea.getText();
    }

    public void setRules(boolean enableRules, String rules) {
        rulesTextArea.setEditable(enableRules);
        rulesTextArea.setText(rules);
    }

    private void applyDarkTheme() {
        java.awt.Color background = new java.awt.Color(43, 43, 43); // Dark gray
        java.awt.Color foreground = new java.awt.Color(187, 187, 187); // Light gray

        contextLabel.setForeground(foreground);

        rulesTextArea.setBackground(background);
        rulesTextArea.setForeground(foreground);
        rulesTextArea.setCaretColor(foreground);

        filesTable.setBackground(background);
        filesTable.setForeground(foreground);
        filesTable.setGridColor(foreground);
        filesTable.setSelectionBackground(new java.awt.Color(60, 63, 65));
        filesTable.setSelectionForeground(foreground);

        javax.swing.table.JTableHeader header = filesTable.getTableHeader();
        header.setBackground(new java.awt.Color(60, 63, 65)); // #3C3F41
        header.setForeground(new java.awt.Color(187, 187, 187)); // #BBBBBB
        header.setOpaque(true);

        contextLayeredPane.setBackground(background);
        filesScrollPane.getViewport().setBackground(background);
        rulesScrollPane.getViewport().setBackground(background);
        getContentPane().setBackground(background);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contextLayeredPane = new javax.swing.JLayeredPane();
        contextLabel = new javax.swing.JLabel();
        rulesScrollPane = new javax.swing.JScrollPane();
        rulesTextArea = new javax.swing.JTextArea();
        filesScrollPane = new javax.swing.JScrollPane();
        filesTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(ContextDialog.class, "ContextDialog.title")); // NOI18N
        getContentPane().setLayout(new java.awt.GridLayout(2, 1, 0, 5));

        contextLayeredPane.setLayout(new javax.swing.BoxLayout(contextLayeredPane, javax.swing.BoxLayout.Y_AXIS));

        org.openide.awt.Mnemonics.setLocalizedText(contextLabel, org.openide.util.NbBundle.getMessage(ContextDialog.class, "ContextDialog.text")); // NOI18N
        contextLabel.setToolTipText(org.openide.util.NbBundle.getMessage(ContextDialog.class, "ContextDialog.contextLabel.toolTipText")); // NOI18N
        contextLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        contextLabel.setMaximumSize(new java.awt.Dimension(500, 16));
        contextLabel.setMinimumSize(new java.awt.Dimension(500, 16));
        contextLabel.setName(""); // NOI18N
        contextLabel.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        contextLayeredPane.add(contextLabel);

        rulesTextArea.setColumns(20);
        rulesTextArea.setRows(5);
        rulesTextArea.setToolTipText(org.openide.util.NbBundle.getMessage(ContextDialog.class, "ContextDialog.rulesTextArea.toolTipText")); // NOI18N
        rulesScrollPane.setViewportView(rulesTextArea);

        contextLayeredPane.add(rulesScrollPane);

        getContentPane().add(contextLayeredPane);

        filesTable.setModel(getTableModel());
        filesTable.setToolTipText(org.openide.util.NbBundle.getMessage(ContextDialog.class, "ContextDialog.filesTable.toolTipText")); // NOI18N
        filesScrollPane.setViewportView(filesTable);

        getContentPane().add(filesScrollPane);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel contextLabel;
    private javax.swing.JLayeredPane contextLayeredPane;
    private javax.swing.JScrollPane filesScrollPane;
    private javax.swing.JTable filesTable;
    private javax.swing.JScrollPane rulesScrollPane;
    private javax.swing.JTextArea rulesTextArea;
    // End of variables declaration//GEN-END:variables
}
